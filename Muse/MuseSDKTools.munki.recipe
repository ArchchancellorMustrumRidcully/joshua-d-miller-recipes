<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>Description</key>
    <string>Download the latest version of Muse SDK Tools and imports it into Munki.</string>
    <key>Identifier</key>
    <string>com.github.joshua-d-miller.autopkg.munki.MuseSDKTools</string>
    <key>Input</key>
    <dict>
        <key>MUNKI_REPO_SUBDIR</key>
        <string>apps/muse</string>
        <key>NAME</key>
        <string>Muse SDK Tools</string>
    	<key>pkginfo</key>
    	<dict>
            <key>blocking_applications</key>
            <array/>
    		<key>catalogs</key>
    		<array>
    			<string>testing</string>
    		</array>
            <key>category</key>
            <string>Media</string>
            <key>developer</key>
            <string>Amazon</string>
            <key>display_name</key>
            <string>Muse SDK Tools</string>
    		<key>description</key>
    		<string>The Muse SDK currently consists of LibMuse and the Muse SDK Tools, three standalone tools for working with Muse data:

LibMuse: An Android and iOS library for writing Muse applications. Directly connects to Muse via Bluetooth, streams in raw data, and provides various forms of processed data including FFT coefficients, band powers, session scores, blink detection, jaw clench detection, and more.

MuseIO: A Muse driver for Mac and Windows desktop environments that connects with Muse via Bluetooth and sends out Muse data as OSC or LSL messages which other programs can receive. For a list of available data, including raw EEG, accelerometer, and spectral components, see the OSC Paths pages here.

MuseLab: A visualizer tool for brainwave and other types of data. MuseLab receives data from MuseIO and allows you to record, annotate, filter, and analyze it with various algorithms.

MusePlayer : A command-line desktop program which allows you to receive Muse data in one format and output it in one or more formats. Can be used for routing OSC messages as well as recording and converting data files.                  </string>
    		<key>name</key>
    		<string>%NAME%</string>
                        <key>display_name</key>
                        <string>%NAME%</string>
    		<key>unattended_install</key>
    		<true/>
            <key>postinstall_script</key>
            <string>#!/bin/bash
/bin/sh "/private/tmp/Muse SDK Tools.app/Contents/MacOS/installbuilder.sh" --unattendedmodeui none
            </string>
    	</dict>
    </dict>
    <key>MinimumVersion</key>
    <string>0.2.9</string>
    <key>ParentRecipe</key>
    <string>com.github.joshua-d-miller.download.MuseSDKTools</string>
    <key>Process</key>
    <array>
        <dict>
            <key>Arguments</key>
            <dict>
                <key>additional_pkginfo</key>
                <dict>
                        <key>installs</key>
                        <array>
                            <dict>
                                <key>md5checksum</key>
                                <string>086e287f793a1ababdda66199b0bf413</string>
                                <key>path</key>
                                <string>/Applications/Muse/muse-lab.jar</string>
                                <key>type</key>
                                <string>file</string>
                            </dict>
                        </array>
                        <key>items_to_copy</key>
                        <array>
                            <dict>
                                <key>destination_path</key>
                                <string>/tmp/</string>
                                <key>source_item</key>
                                <string>Muse SDK Installer.app</string>
                            </dict>
                        </array>
                        <key>uninstall_method</key>
                        <string>uninstall_script</string>
                        <key>uninstall_script</key>
                        <string>#!/bin/bash
/bin/sh "/Applications/Muse/uninstall.app/Contents/MacOS/installbuilder.sh" --unattendedmodeui none
            </string>
                </dict>
            </dict>
            <key>Processor</key>
            <string>MunkiPkginfoMerger</string>
        </dict>
        <dict>
            <key>Arguments</key>
            <dict>
                <key>pkg_path</key>
                <string>%pathname%</string>
                <key>repo_subdirectory</key>
                <string>%MUNKI_REPO_SUBDIR%</string>
            </dict>
            <key>Processor</key>
            <string>MunkiImporter</string>
        </dict>
    </array>
</dict>
</plist>
